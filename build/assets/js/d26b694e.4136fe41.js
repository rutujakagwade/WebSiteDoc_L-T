"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2691],{3371:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"testing","title":"Testing Guide","description":"This guide provides a comprehensive testing strategy for the L&T Sales Tracker application. While the current codebase doesn\'t include tests, this document outlines the recommended testing approach and provides examples for implementation.","source":"@site/docs/08_testing.md","sourceDirName":".","slug":"/testing","permalink":"/WebSiteDoc_L-T/docs/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/rutujakagwade/WebSiteDoc_L-T/edit/main/docs/08_testing.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Environment Variables & Secrets Management","permalink":"/WebSiteDoc_L-T/docs/env_and_secrets"},"next":{"title":"Troubleshooting Guide","permalink":"/WebSiteDoc_L-T/docs/troubleshooting"}}');var s=r(4848),i=r(8453);const l={},a="Testing Guide",o={},c=[{value:"Testing Philosophy",id:"testing-philosophy",level:2},{value:"Test Setup Instructions",id:"test-setup-instructions",level:2},{value:"Backend Testing Setup",id:"backend-testing-setup",level:3},{value:"Frontend Testing Setup",id:"frontend-testing-setup",level:3},{value:"Unit Testing",id:"unit-testing",level:2},{value:"Backend Unit Tests",id:"backend-unit-tests",level:3},{value:"Frontend Unit Tests",id:"frontend-unit-tests",level:3},{value:"Integration Testing",id:"integration-testing",level:2},{value:"Backend Integration Tests",id:"backend-integration-tests",level:3},{value:"Frontend Integration Tests",id:"frontend-integration-tests",level:3},{value:"E2E Testing",id:"e2e-testing",level:2},{value:"Setup with Detox",id:"setup-with-detox",level:3},{value:"Manual Testing",id:"manual-testing",level:2},{value:"Critical User Flows",id:"critical-user-flows",level:3},{value:"Test Case Template",id:"test-case-template",level:3},{value:"API Testing",id:"api-testing",level:2},{value:"Postman Collection",id:"postman-collection",level:3},{value:"Example API Test Script",id:"example-api-test-script",level:3},{value:"Performance Testing",id:"performance-testing",level:2},{value:"Load Testing with Artillery",id:"load-testing-with-artillery",level:3},{value:"Performance Benchmarks",id:"performance-benchmarks",level:3},{value:"Recommended Tests to Add",id:"recommended-tests-to-add",level:2},{value:"Backend Tests",id:"backend-tests",level:3},{value:"Frontend Tests",id:"frontend-tests",level:3},{value:"Test Scaffolding",id:"test-scaffolding",level:2},{value:"Backend Test Structure",id:"backend-test-structure",level:3},{value:"Frontend Test Structure",id:"frontend-test-structure",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"testing-guide",children:"Testing Guide"})}),"\n",(0,s.jsx)(n.p,{children:"This guide provides a comprehensive testing strategy for the L&T Sales Tracker application. While the current codebase doesn't include tests, this document outlines the recommended testing approach and provides examples for implementation."}),"\n",(0,s.jsx)(n.h2,{id:"testing-philosophy",children:"Testing Philosophy"}),"\n",(0,s.jsx)(n.p,{children:"Our testing strategy follows the Testing Pyramid principle:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Unit Tests (70%): Testing individual components and functions"}),"\n",(0,s.jsx)(n.li,{children:"Integration Tests (20%): Testing interaction between components"}),"\n",(0,s.jsx)(n.li,{children:"End-to-End Tests (10%): Testing complete user flows"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"test-setup-instructions",children:"Test Setup Instructions"}),"\n",(0,s.jsx)(n.h3,{id:"backend-testing-setup",children:"Backend Testing Setup"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Install Dependencies"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:"cd backend/backend\r\nnpm install --save-dev jest supertest @babel/preset-env\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Jest Configuration"})}),"\n",(0,s.jsxs)(n.p,{children:["Create ",(0,s.jsx)(n.code,{children:"jest.config.js"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\r\n  testEnvironment: 'node',\r\n  testMatch: ['**/*.test.js'],\r\n  collectCoverage: true,\r\n  coverageDirectory: 'coverage',\r\n  coverageThreshold: {\r\n    global: {\r\n      branches: 80,\r\n      functions: 80,\r\n      lines: 80,\r\n      statements: 80\r\n    }\r\n  }\r\n};\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Update package.json"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\r\n  "scripts": {\r\n    "test": "jest",\r\n    "test:watch": "jest --watch",\r\n    "test:coverage": "jest --coverage"\r\n  }\r\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"frontend-testing-setup",children:"Frontend Testing Setup"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Install Dependencies"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:"cd client\r\nnpm install --save-dev @testing-library/react-native @testing-library/jest-native jest\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Jest Configuration"})}),"\n",(0,s.jsxs)(n.p,{children:["Create ",(0,s.jsx)(n.code,{children:"jest.config.js"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\r\n  preset: 'jest-expo',\r\n  setupFilesAfterEnv: ['@testing-library/jest-native/extend-expect'],\r\n  transformIgnorePatterns: [\r\n    'node_modules/(?!(jest-)?react-native|@react-native|expo(nent)?|@expo(nent)?/.*|@expo-google-fonts/.*|react-navigation|@react-navigation/.*|@unimodules/.*|unimodules|sentry-expo|native-base|react-native-svg)'\r\n  ]\r\n};\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"unit-testing",children:"Unit Testing"}),"\n",(0,s.jsx)(n.h3,{id:"backend-unit-tests",children:"Backend Unit Tests"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Controller Tests"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// controllers/__tests__/memberController.test.js\r\nimport { loginMember } from '../memberController';\r\nimport Member from '../../models/Member';\r\nimport { generateToken } from '../../utils/generateToken';\r\n\r\njest.mock('../../models/Member');\r\njest.mock('../../utils/generateToken');\r\n\r\ndescribe('loginMember', () => {\r\n  it('should return token and user data for valid credentials', async () => {\r\n    const req = {\r\n      body: {\r\n        email: 'test@example.com',\r\n        password: 'password123'\r\n      }\r\n    };\r\n    const res = {\r\n      json: jest.fn()\r\n    };\r\n\r\n    const mockUser = {\r\n      _id: '123',\r\n      email: 'test@example.com',\r\n      role: 'user'\r\n    };\r\n\r\n    Member.findOne.mockResolvedValue(mockUser);\r\n    generateToken.mockReturnValue('mock-token');\r\n\r\n    await loginMember(req, res);\r\n\r\n    expect(res.json).toHaveBeenCalledWith({\r\n      token: 'mock-token',\r\n      user: mockUser\r\n    });\r\n  });\r\n});\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Model Tests"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// models/__tests__/Journey.test.js\r\nimport mongoose from 'mongoose';\r\nimport Journey from '../Journey';\r\n\r\ndescribe('Journey Model', () => {\r\n  beforeAll(async () => {\r\n    await mongoose.connect(globalThis.__MONGO_URI__);\r\n  });\r\n\r\n  afterAll(async () => {\r\n    await mongoose.connection.close();\r\n  });\r\n\r\n  it('should create journey with valid data', async () => {\r\n    const validJourney = {\r\n      user: new mongoose.Types.ObjectId(),\r\n      title: 'Test Journey',\r\n      startLocation: {\r\n        latitude: 19.0760,\r\n        longitude: 72.8777\r\n      },\r\n      endLocation: {\r\n        latitude: 18.5204,\r\n        longitude: 73.8567\r\n      }\r\n    };\r\n\r\n    const journey = await Journey.create(validJourney);\r\n    expect(journey.title).toBe(validJourney.title);\r\n  });\r\n});\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"frontend-unit-tests",children:"Frontend Unit Tests"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Component Tests"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// app/User/__tests__/ExpenseForm.test.js\r\nimport React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport ExpenseForm from '../ExpenseForm';\r\n\r\ndescribe('ExpenseForm', () => {\r\n  it('should submit form with valid data', () => {\r\n    const mockSubmit = jest.fn();\r\n    const { getByPlaceholderText, getByText } = render(\r\n      <ExpenseForm onSubmit={mockSubmit} />\r\n    );\r\n\r\n    fireEvent.changeText(\r\n      getByPlaceholderText('Amount'),\r\n      '100'\r\n    );\r\n    fireEvent.changeText(\r\n      getByPlaceholderText('Description'),\r\n      'Test expense'\r\n    );\r\n    fireEvent.press(getByText('Submit'));\r\n\r\n    expect(mockSubmit).toHaveBeenCalledWith({\r\n      amount: 100,\r\n      description: 'Test expense'\r\n    });\r\n  });\r\n});\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Hook Tests"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// hooks/__tests__/useAuth.test.js\r\nimport { renderHook, act } from '@testing-library/react-hooks';\r\nimport useAuth from '../useAuth';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\njest.mock('@react-native-async-storage/async-storage');\r\n\r\ndescribe('useAuth', () => {\r\n  it('should load auth state from storage', async () => {\r\n    AsyncStorage.getItem.mockResolvedValue(JSON.stringify({\r\n      token: 'test-token',\r\n      user: { id: '123' }\r\n    }));\r\n\r\n    const { result, waitForNextUpdate } = renderHook(() => useAuth());\r\n    await waitForNextUpdate();\r\n\r\n    expect(result.current.isAuthenticated).toBe(true);\r\n    expect(result.current.user).toEqual({ id: '123' });\r\n  });\r\n});\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"integration-testing",children:"Integration Testing"}),"\n",(0,s.jsx)(n.h3,{id:"backend-integration-tests",children:"Backend Integration Tests"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// tests/integration/auth.test.js\r\nimport request from 'supertest';\r\nimport app from '../../app';\r\nimport Member from '../../models/Member';\r\n\r\ndescribe('Auth API', () => {\r\n  beforeEach(async () => {\r\n    await Member.deleteMany({});\r\n  });\r\n\r\n  describe('POST /api/auth/login', () => {\r\n    it('should authenticate user and return token', async () => {\r\n      // Create test user\r\n      await Member.create({\r\n        email: 'test@example.com',\r\n        password: 'password123',\r\n        role: 'user'\r\n      });\r\n\r\n      const response = await request(app)\r\n        .post('/api/auth/login')\r\n        .send({\r\n          email: 'test@example.com',\r\n          password: 'password123'\r\n        });\r\n\r\n      expect(response.status).toBe(200);\r\n      expect(response.body).toHaveProperty('token');\r\n      expect(response.body).toHaveProperty('user');\r\n    });\r\n  });\r\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"frontend-integration-tests",children:"Frontend Integration Tests"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// tests/integration/JourneyFlow.test.js\r\nimport React from 'react';\r\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport JourneyTracking from '../../app/User/JourneyTracking';\r\n\r\ndescribe('Journey Tracking Flow', () => {\r\n  it('should create and start journey', async () => {\r\n    const { getByText, getByPlaceholderText } = render(\r\n      <NavigationContainer>\r\n        <JourneyTracking />\r\n      </NavigationContainer>\r\n    );\r\n\r\n    // Fill journey details\r\n    fireEvent.changeText(\r\n      getByPlaceholderText('Start Location'),\r\n      'Mumbai'\r\n    );\r\n    fireEvent.changeText(\r\n      getByPlaceholderText('End Location'),\r\n      'Pune'\r\n    );\r\n\r\n    // Start journey\r\n    fireEvent.press(getByText('Start Journey'));\r\n\r\n    await waitFor(() => {\r\n      expect(getByText('Journey Started')).toBeTruthy();\r\n    });\r\n  });\r\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"e2e-testing",children:"E2E Testing"}),"\n",(0,s.jsx)(n.h3,{id:"setup-with-detox",children:"Setup with Detox"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Install Detox"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:"cd client\r\nnpm install --save-dev detox\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configure Detox"})}),"\n",(0,s.jsxs)(n.p,{children:["Update ",(0,s.jsx)(n.code,{children:".detoxrc.js"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\r\n  testRunner: 'jest',\r\n  runnerConfig: 'e2e/config.json',\r\n  configurations: {\r\n    'android.emu.debug': {\r\n      type: 'android.emulator',\r\n      binaryPath: 'android/app/build/outputs/apk/debug/app-debug.apk',\r\n      build: 'cd android && ./gradlew assembleDebug',\r\n      device: {\r\n        avdName: 'Pixel_3a_API_30_x86'\r\n      }\r\n    }\r\n  }\r\n};\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example E2E Test"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// e2e/login.test.js\r\ndescribe('Login Flow', () => {\r\n  beforeAll(async () => {\r\n    await device.launchApp();\r\n  });\r\n\r\n  it('should login successfully', async () => {\r\n    await element(by.id('email')).typeText('user@example.com');\r\n    await element(by.id('password')).typeText('password123');\r\n    await element(by.text('Login')).tap();\r\n\r\n    await expect(element(by.text('Dashboard'))).toBeVisible();\r\n  });\r\n});\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"manual-testing",children:"Manual Testing"}),"\n",(0,s.jsx)(n.h3,{id:"critical-user-flows",children:"Critical User Flows"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Authentication Flow"})}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","User registration"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","User login"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Password reset"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Token refresh"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Journey Management"})}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Create journey"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Start tracking"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","End journey"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","View journey history"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Expense Management"})}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Submit expense"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Upload receipt"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","View expense status"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Expense approval (admin)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"test-case-template",children:"Test Case Template"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:"### Test Case: [ID] - [Title]\r\n\r\n**Preconditions:**\r\n- List required setup\r\n- Required user role\r\n- Required data state\r\n\r\n**Steps:**\r\n1. Step one\r\n2. Step two\r\n3. Step three\r\n\r\n**Expected Result:**\r\n- What should happen\r\n- What user should see\r\n- What data should change\r\n\r\n**Actual Result:**\r\n- Document what actually happened\r\n\r\n**Pass/Fail:**\r\n- Mark as PASS or FAIL\r\n- Note any defects\r\n\r\n**Screenshots:**\r\n- Attach relevant screenshots\n"})}),"\n",(0,s.jsx)(n.h2,{id:"api-testing",children:"API Testing"}),"\n",(0,s.jsx)(n.h3,{id:"postman-collection",children:"Postman Collection"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Export collection from Postman"})}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Include environment variables file"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-api-test-script",children:"Example API Test Script"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// tests/api/journey.test.js\r\nconst axios = require('axios');\r\n\r\ndescribe('Journey API', () => {\r\n  let token;\r\n\r\n  beforeAll(async () => {\r\n    const response = await axios.post('/api/auth/login', {\r\n      email: 'test@example.com',\r\n      password: 'password123'\r\n    });\r\n    token = response.data.token;\r\n  });\r\n\r\n  it('should create new journey', async () => {\r\n    const response = await axios.post('/api/journeys', {\r\n      startLocation: 'Mumbai',\r\n      endLocation: 'Pune',\r\n      purpose: 'Meeting'\r\n    }, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n\r\n    expect(response.status).toBe(201);\r\n    expect(response.data).toHaveProperty('id');\r\n  });\r\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"performance-testing",children:"Performance Testing"}),"\n",(0,s.jsx)(n.h3,{id:"load-testing-with-artillery",children:"Load Testing with Artillery"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Install Artillery"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:"npm install -g artillery\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Create Test Script"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# tests/performance/load-test.yml\r\nconfig:\r\n  target: "http://localhost:5000"\r\n  phases:\r\n    - duration: 60\r\n      arrivalRate: 20\r\nscenarios:\r\n  - name: "API endpoints"\r\n    flow:\r\n      - post:\r\n          url: "/api/auth/login"\r\n          json:\r\n            email: "test@example.com"\r\n            password: "password123"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Run Test"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:"artillery run tests/performance/load-test.yml\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"performance-benchmarks",children:"Performance Benchmarks"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Endpoint"}),(0,s.jsx)(n.th,{children:"Expected Response Time"}),(0,s.jsx)(n.th,{children:"Max Load"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Login"}),(0,s.jsx)(n.td,{children:"< 200ms"}),(0,s.jsx)(n.td,{children:"100 req/s"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Create Journey"}),(0,s.jsx)(n.td,{children:"< 300ms"}),(0,s.jsx)(n.td,{children:"50 req/s"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Upload Expense"}),(0,s.jsx)(n.td,{children:"< 500ms"}),(0,s.jsx)(n.td,{children:"20 req/s"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"recommended-tests-to-add",children:"Recommended Tests to Add"}),"\n",(0,s.jsx)(n.h3,{id:"backend-tests",children:"Backend Tests"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Authentication"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Token validation"}),"\n",(0,s.jsx)(n.li,{children:"Role-based access"}),"\n",(0,s.jsx)(n.li,{children:"Password hashing"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Data Validation"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Input sanitization"}),"\n",(0,s.jsx)(n.li,{children:"Schema validation"}),"\n",(0,s.jsx)(n.li,{children:"Error handling"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Business Logic"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Journey calculations"}),"\n",(0,s.jsx)(n.li,{children:"Expense approvals"}),"\n",(0,s.jsx)(n.li,{children:"Balance updates"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"frontend-tests",children:"Frontend Tests"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"UI Components"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Form validation"}),"\n",(0,s.jsx)(n.li,{children:"Error states"}),"\n",(0,s.jsx)(n.li,{children:"Loading states"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Navigation"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Route protection"}),"\n",(0,s.jsx)(n.li,{children:"Deep linking"}),"\n",(0,s.jsx)(n.li,{children:"Back navigation"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"State Management"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Data persistence"}),"\n",(0,s.jsx)(n.li,{children:"Cache handling"}),"\n",(0,s.jsx)(n.li,{children:"Offline mode"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"test-scaffolding",children:"Test Scaffolding"}),"\n",(0,s.jsx)(n.h3,{id:"backend-test-structure",children:"Backend Test Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"backend/\r\n\u251c\u2500\u2500 __tests__/\r\n\u2502   \u251c\u2500\u2500 unit/\r\n\u2502   \u2502   \u251c\u2500\u2500 controllers/\r\n\u2502   \u2502   \u251c\u2500\u2500 models/\r\n\u2502   \u2502   \u2514\u2500\u2500 utils/\r\n\u2502   \u251c\u2500\u2500 integration/\r\n\u2502   \u2502   \u251c\u2500\u2500 auth/\r\n\u2502   \u2502   \u251c\u2500\u2500 journey/\r\n\u2502   \u2502   \u2514\u2500\u2500 expense/\r\n\u2502   \u2514\u2500\u2500 e2e/\r\n\u2514\u2500\u2500 jest.config.js\n"})}),"\n",(0,s.jsx)(n.h3,{id:"frontend-test-structure",children:"Frontend Test Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"client/\r\n\u251c\u2500\u2500 __tests__/\r\n\u2502   \u251c\u2500\u2500 components/\r\n\u2502   \u251c\u2500\u2500 screens/\r\n\u2502   \u251c\u2500\u2500 hooks/\r\n\u2502   \u2514\u2500\u2500 utils/\r\n\u251c\u2500\u2500 e2e/\r\n\u2502   \u251c\u2500\u2500 flows/\r\n\u2502   \u2514\u2500\u2500 config.json\r\n\u2514\u2500\u2500 jest.config.js\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var t=r(6540);const s={},i=t.createContext(s);function l(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);